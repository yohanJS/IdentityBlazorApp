@using IdentityBlazorApp.Areas.Identity.Pages.Account.Manage
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager


<h1>Manage Account</h1>
<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.Index" id="profile" asp-page="./Index">Profile</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.Email" id="email" asp-page="./Email">Email</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePassword" id="change-password" asp-page="./ChangePassword">Password</a></li>
    @if (true)
    {
        <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLogins" asp-page="./ExternalLogins">External logins</a></li>
    }
    <li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthentication" id="two-factor" asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalData" id="personal-data" asp-page="./PersonalData">Personal data</a></li>
</ul>


@{
    //var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

